[
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_ProductDetails",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_ProductDetails]\r\n    @ProductId INT\r\nAS\r\nBEGIN\r\n    SELECT p.*, pd.*, pv.*, pi.*, pr.*\r\n    FROM Products p\r\n    LEFT JOIN ProductDescriptions pd ON p.ProductId = pd.ProductId\r\n    LEFT JOIN ProductVariants pv ON p.ProductId = pv.ProductId\r\n    LEFT JOIN ProductImages pi ON p.ProductId = pi.ProductId\r\n    LEFT JOIN ProductReviews pr ON p.ProductId = pr.ProductId\r\n    WHERE p.ProductId = @ProductId;\r\nEND\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_CartItem",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Remove_CartItem]\r\n    @ProductId INT,\r\n    @UserId INT,\r\n    @VariantSubId INT\r\nAS\r\nBEGIN\r\n    IF EXISTS (\r\n        SELECT 1\r\n        FROM CartItems\r\n        WHERE ProductId = @ProductId\r\n        AND UserId = @UserId\r\n        AND VariantSubId = @VariantSubId\r\n    )\r\n    BEGIN\r\n        DELETE FROM CartItems\r\n        WHERE ProductId = @ProductId\r\n        AND UserId = @UserId\r\n        AND VariantSubId = @VariantSubId;\r\n    END\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_CartItemQuantity",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Update_CartItemQuantity]\r\n    @ProductId INT,\r\n    @UserId INT,\r\n    @VariantSubId INT,\r\n    @NewQuantity INT\r\nAS\r\nBEGIN\r\n    IF EXISTS (\r\n        SELECT 1\r\n        FROM CartItems\r\n        WHERE ProductId = @ProductId\r\n        AND UserId = @UserId\r\n        AND VariantSubId = @VariantSubId\r\n    )\r\n    BEGIN\r\n        -- Update the cart item's quantity\r\n        UPDATE CartItems\r\n        SET Quantity = @NewQuantity\r\n        WHERE ProductId = @ProductId\r\n        AND UserId = @UserId\r\n        AND VariantSubId = @VariantSubId;\r\n    END\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_Categories",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_Categories]\r\nAS\r\nBEGIN\r\n    SELECT * FROM CategoriesPrimary cp\r\n    JOIN CategoriesSecondary cs ON cp.PrimaryCategoryId = cs.PrimaryCategoryId\r\n    JOIN CategoriesTertiary ct ON ct.SecondaryCategoryId = cs.SecondaryCategoryId\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CategoriesPrimary",
    "ProcedureDefinition": "CREATE PROCEDURE Get_CategoriesPrimary\nAS\nBEGIN\n    SELECT * FROM CategoriesPrimary\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_UserByUsername",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_UserByUsername] \r\n    @Username NVARCHAR(48)\r\nAS\r\nBEGIN\r\n    SELECT * FROM UserAccounts\r\n    WHERE Username = @Username\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CategoriesSecondary",
    "ProcedureDefinition": "CREATE PROCEDURE Get_CategoriesSecondary\r\nAS\r\nBEGIN\r\n    SELECT * FROM CategoriesSecondary\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_UserByNameOrEmail",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_UserByNameOrEmail]\r\n    @Username NVARCHAR(48),\r\n    @Email NVARCHAR(254)\r\nAS\r\nBEGIN\r\n    SELECT * FROM UserAccounts\r\n    WHERE (Username = @Username\r\n    OR Email = @Email)\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CategoriesTertiary",
    "ProcedureDefinition": "CREATE PROCEDURE Get_CategoriesTertiary\r\nAS\r\nBEGIN\r\n    SELECT * FROM CategoriesTertiary\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_SpecDescrs",
    "ProcedureDefinition": "CREATE PROCEDURE Get_SpecDescrs\r\nAS\r\nBEGIN\r\n    SELECT s.*, c.* \r\n    FROM SpecDescrs s\r\n    LEFT JOIN SpecCategories c\r\n    ON s.SpecId = c.SpecId\r\nEND"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_SpecLookupsByCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Get_SpecLookupsByCategory\r\n    @CategoryId INT\r\nAS\r\nBEGIN\r\n    SELECT s.*\r\n    FROM SpecLookups s\r\n    LEFT JOIN SpecCategories c\r\n    ON s.SpecId = c.SpecId\r\n    WHERE c.CategoryId = @CategoryId;\r\nEND"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_SpecDescrsByCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Get_SpecDescrsByCategory\r\n    @CategoryId INT\r\nAS\r\nBEGIN\r\n    SELECT s.*\r\n    FROM SpecDescrs s\r\n    LEFT JOIN SpecCategories c\r\n    ON s.SpecId = c.SpecId\r\n    WHERE c.CategoryId = @CategoryId;\r\nEND"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_UserByEmail",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_UserByEmail]\r\n    @Email NVARCHAR(254)\r\nAS\r\nBEGIN\r\n    SELECT * FROM UserAccounts\r\n    WHERE Email = @Email\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_ProductSearchSuggestions",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_ProductSearchSuggestions]\r\n    @SearchText NVARCHAR(64),\r\n    @TertiaryCategoryIdTable TertiaryCategoryIdTableType READONLY\r\nAS\r\nBEGIN\r\n    SELECT p.Title\r\n    FROM Products p\r\n    INNER JOIN ProductCategories pc ON p.ProductId = pc.ProductId\r\n    INNER JOIN ProductDescriptions pd ON p.ProductId = pd.ProductId\r\n    WHERE pc.TertiaryCategoryId IN (SELECT TertiaryCategoryId FROM @TertiaryCategoryIdTable)\r\n    AND (p.Title LIKE '%' + @SearchText + '%'\r\n    OR pd.DescriptionBody LIKE '%' + @SearchText + '%');\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupInt",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupInt\r\n    @SpecName NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_Int (SpecName)\r\n    VALUES (@SpecName);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupString",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupString\r\n    @SpecName NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_String (SpecName)\r\n    VALUES (@SpecName);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupBool",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupBool\r\n    @SpecName NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_Bool (SpecName)\r\n    VALUES (@SpecName);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupInt",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupInt\n    @SpecId INT\nAS\nBEGIN\n    DELETE FROM Specs_Lookup_Single_Int\n    WHERE SpecId = @SpecId;\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupString",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupString\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_String\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupBool",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupBool\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_Bool\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupMulti",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupMulti\r\n    @TableName NVARCHAR(64),\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    DECLARE @Sql NVARCHAR(MAX);\r\n    SET @Sql = N'DELETE FROM ' + QUOTENAME(@TableName) + ' WHERE SpecId = @SpecId';\r\n    EXEC sp_executesql @Sql, N'@SpecId INT', @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupMulti",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Add_SpecLookupMulti]\r\n    @TableName NVARCHAR(64),\r\n    @SpecValue NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    DECLARE @Sql NVARCHAR(MAX);\r\n    SET @Sql = N'INSERT INTO ' + QUOTENAME(@TableName) + ' (SpecValue) VALUES (@SpecValue)';\r\n    EXEC sp_executesql @Sql, N'@SpecValue NVARCHAR(64)', @SpecValue;\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_UserById",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_UserById]\r\n    @UserId INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM UserAccounts\r\n    WHERE UserId = @UserId\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_UserPassword",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Update_UserPassword]\r\n    @UserId INT,\r\n    @Hash VARBINARY(64),\r\n    @Salt VARBINARY(16)\r\nAS\r\nBEGIN\r\n    UPDATE UserAccounts\r\n    SET PasswordHash = @Hash, PasswordSalt = @Salt\r\n    WHERE UserId = @UserId\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupIntFilter",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupIntFilter\r\n    @SpecId INT,\r\n    @FilterValue INT\r\nAS\r\nBEGIN\r\n    DECLARE @NewFilterId INT;\r\n    SELECT @NewFilterId = ISNULL(MAX(FilterId), 0) + 1 FROM Specs_Lookup_Single_Int_Filters WHERE SpecId = @SpecId;\r\n    INSERT INTO Specs_Lookup_Single_Int_Filters (SpecId, FilterId, FilterValue)\r\n    VALUES (@SpecId, @NewFilterId, @FilterValue);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupStringFilter",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupStringFilter\r\n    @SpecId INT,\r\n    @FilterValue NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    DECLARE @NewFilterId INT;\r\n    SELECT @NewFilterId = ISNULL(MAX(FilterId), 0) + 1 FROM Specs_Lookup_Single_String_Filters WHERE SpecId = @SpecId;\r\n    INSERT INTO Specs_Lookup_Single_String_Filters (SpecId, FilterId, FilterValue)\r\n    VALUES (@SpecId, @NewFilterId, @FilterValue);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupStringFilter",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupStringFilter\r\n    @SpecId INT,\r\n    @FilterId INT\r\nAS\r\nBEGIN\r\n    -- Start a transaction\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Delete the specified row\r\n    DELETE FROM Specs_Lookup_Single_String_Filters WHERE SpecId = @SpecId AND FilterId = @FilterId;\r\n\r\n    -- Check if the row was successfully deleted\r\n    IF @@ROWCOUNT > 0\r\n    BEGIN\r\n        -- Variables to hold the current and next FilterId during the loop\r\n        DECLARE @CurrentFilterId INT, @NextFilterId INT;\r\n\r\n        -- Initialize the first FilterId to be the one immediately after the deleted FilterId\r\n        SET @CurrentFilterId = @FilterId;\r\n\r\n        -- Get the next FilterId after the deleted one\r\n        SELECT @NextFilterId = MIN(FilterId) FROM Specs_Lookup_Single_String_Filters WHERE SpecId = @SpecId AND FilterId > @FilterId;\r\n\r\n        -- Loop through the remaining FilterId values and decrement each by 1\r\n        WHILE @NextFilterId IS NOT NULL\r\n        BEGIN\r\n            -- Decrement the FilterId by 1\r\n            UPDATE Specs_Lookup_Single_String_Filters SET FilterId = FilterId - 1 WHERE SpecId = @SpecId AND FilterId = @NextFilterId;\r\n\r\n            -- Move to the next FilterId\r\n            SET @CurrentFilterId = @NextFilterId;\r\n            SELECT @NextFilterId = MIN(FilterId) FROM Specs_Lookup_Single_String_Filters WHERE SpecId = @SpecId AND FilterId > @CurrentFilterId;\r\n        END;\r\n    END;\r\n\r\n    -- If everything is successful, commit the transaction\r\n    COMMIT TRANSACTION;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupIntFilter",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupIntFilter\r\n    @SpecId INT,\r\n    @FilterId INT\r\nAS\r\nBEGIN\r\n    -- Start a transaction\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Delete the specified row\r\n    DELETE FROM Specs_Lookup_Single_Int_Filters WHERE SpecId = @SpecId AND FilterId = @FilterId;\r\n\r\n    -- Check if the row was successfully deleted\r\n    IF @@ROWCOUNT > 0\r\n    BEGIN\r\n        -- Variables to hold the current and next FilterId during the loop\r\n        DECLARE @CurrentFilterId INT, @NextFilterId INT;\r\n\r\n        -- Initialize the first FilterId to be the one immediately after the deleted FilterId\r\n        SET @CurrentFilterId = @FilterId;\r\n\r\n        -- Get the next FilterId after the deleted one\r\n        SELECT @NextFilterId = MIN(FilterId) FROM Specs_Lookup_Single_Int_Filters WHERE SpecId = @SpecId AND FilterId > @FilterId;\r\n\r\n        -- Loop through the remaining FilterId values and decrement each by 1\r\n        WHILE @NextFilterId IS NOT NULL\r\n        BEGIN\r\n            -- Decrement the FilterId by 1\r\n            UPDATE Specs_Lookup_Single_Int_Filters SET FilterId = FilterId - 1 WHERE SpecId = @SpecId AND FilterId = @NextFilterId;\r\n\r\n            -- Move to the next FilterId\r\n            SET @CurrentFilterId = @NextFilterId;\r\n            SELECT @NextFilterId = MIN(FilterId) FROM Specs_Lookup_Single_Int_Filters WHERE SpecId = @SpecId AND FilterId > @CurrentFilterId;\r\n        END;\r\n    END;\r\n\r\n    -- If everything is successful, commit the transaction\r\n    COMMIT TRANSACTION;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupIntCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupIntCategory\r\n    @SpecId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_Int_Categories (SpecId, PrimaryCategoryId)\r\n    VALUES (@SpecId, @PrimaryCategoryId);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_Products",
    "ProcedureDefinition": "CREATE PROCEDURE Get_Products\r\nAS\r\nBEGIN\r\n    SELECT p.*, pv.* \r\n    FROM Products p\r\n    LEFT JOIN ProductVariants pv ON p.ProductId = pv.ProductId\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupStringCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupStringCategory\r\n    @SpecId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_String_Categories (SpecId, PrimaryCategoryId)\r\n    VALUES (@SpecId, @PrimaryCategoryId);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupBoolCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupBoolCategory\r\n    @SpecId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_Bool_Categories (SpecId, PrimaryCategoryId)\r\n    VALUES (@SpecId, @PrimaryCategoryId);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupIntCategory",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Remove_SpecLookupIntCategory]\r\n    @SpecId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_Int_Categories\r\n    WHERE SpecId = @SpecId\r\n    AND PrimaryCategoryId = @PrimaryCategoryId;\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupStringCategory",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Remove_SpecLookupStringCategory]\r\n    @SpecId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_String_Categories\r\n    WHERE SpecId = @SpecId\r\n    AND PrimaryCategoryId = @PrimaryCategoryId;\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupBoolCategory",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Remove_SpecLookupBoolCategory]\r\n    @SpecId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_Bool_Categories\r\n    WHERE SpecId = @SpecId\r\n    AND PrimaryCategoryId = @PrimaryCategoryId;\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CategoryDescriptionsPrimary",
    "ProcedureDefinition": "CREATE PROCEDURE Get_CategoryDescriptionsPrimary\r\nAS\r\nBEGIN\r\n    SELECT * FROM CategoryDescriptions\r\n    WHERE CategoryLevel = 1\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupIntGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupIntGlobal\n    @SpecId INT\nAS\nBEGIN\n    INSERT INTO Specs_Lookup_Single_Int_Global (SpecId)\n    VALUES(@SpecId);\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CategoryDescription",
    "ProcedureDefinition": "CREATE PROCEDURE Get_CategoryDescription\r\n    @CategoryId INT,\r\n    @CategoryTier INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM CategoryDescriptions\r\n    WHERE CategoryLevel = @CategoryTier\r\n    AND CategoryId = @CategoryId\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupStringGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupStringGlobal\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_String_Global (SpecId)\r\n    VALUES(@SpecId);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupBoolGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Add_SpecLookupBoolGlobal]\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Specs_Lookup_Single_Bool_Global (SpecId)\r\n    VALUES (@SpecId);\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupIntGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupIntGlobal\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_Int_Global\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupStringGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupStringGlobal\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_String_Global\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupBoolGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupBoolGlobal\r\n    @SpecId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Specs_Lookup_Single_Bool_Global\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupMultiTableCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupMultiTableCategory\r\n    @TableId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Spec_Lookup_Multi_Tables_Categories (TableId, PrimaryCategoryId)\r\n    VALUES (@TableId, @PrimaryCategoryId);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_SpecLookupMultiGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Add_SpecLookupMultiGlobal\r\n    @TableId INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Spec_Lookup_Multi_Tables_Global (TableId)\r\n    VALUES (@TableId);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupMultiTableCategory",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupMultiTableCategory\r\n    @TableId INT,\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Spec_Lookup_Multi_Tables_Categories\r\n    WHERE TableId = @TableId\r\n    AND PrimaryCategoryId = @PrimaryCategoryId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_SpecLookupMutiTableGlobal",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_SpecLookupMutiTableGlobal\r\n    @TableId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Spec_Lookup_Multi_Tables_Global\r\n    WHERE TableId = @TableId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_CartItems",
    "ProcedureDefinition": "CREATE PROCEDURE Add_CartItems\r\n    @CartItems CartItemTableType READONLY\r\nAS\r\nBEGIN\r\n    INSERT INTO CartItems (ProductId, UserId, VariantSubId, Quantity)\r\n    SELECT Source.ProductId, Source.UserId, Source.VariantSubId, Source.Quantity\r\n    FROM @CartItems AS Source\r\n    WHERE NOT EXISTS (\r\n        SELECT 1\r\n        FROM CartItems AS Target\r\n        WHERE Target.ProductId = Source.ProductId\r\n        AND Target.UserId = Source.UserId\r\n        AND Target.VariantSubId = Source.VariantSubId\r\n    );\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_SpecLookupInt",
    "ProcedureDefinition": "CREATE PROCEDURE Update_SpecLookupInt\r\n    @SpecId INT,\r\n    @NewSpecName NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    UPDATE Specs_Lookup_Single_Int\r\n    SET SpecName = @NewSpecName\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_SpecLookupString",
    "ProcedureDefinition": "CREATE PROCEDURE Update_SpecLookupString\r\n    @SpecId INT,\r\n    @NewSpecName NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    UPDATE Specs_Lookup_Single_String\r\n    SET SpecName = @NewSpecName\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_SpecLookupBool",
    "ProcedureDefinition": "CREATE PROCEDURE Update_SpecLookupBool\r\n    @SpecId INT,\r\n    @NewSpecName NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    UPDATE Specs_Lookup_Single_Bool\r\n    SET SpecName = @NewSpecName\r\n    WHERE SpecId = @SpecId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Create_UserSession",
    "ProcedureDefinition": "CREATE PROCEDURE Create_UserSession\r\n    @UserId INT,\r\n    @IpAddress NVARCHAR(64),\r\n    @Fingerprint NVARCHAR(32),\r\n    @Hash VARBINARY(64),\r\n    @Salt VARBINARY(16)\r\nAS\r\nBEGIN\r\n    INSERT INTO UserSessions (UserId, IpAddress, DeviceFingerprint, TokenHash, TokenSalt)\r\n    VALUES (@UserId, @IpAddress, @Fingerprint, @Hash, @Salt);\r\n    SELECT * FROM UserSessions WHERE SessionId = SCOPE_IDENTITY();\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Count_CartItems",
    "ProcedureDefinition": "CREATE PROCEDURE Count_CartItems\r\n    @UserId INT\r\nAS\r\nBEGIN\r\n    SELECT COUNT(*)\r\n    FROM CartItems\r\n    WHERE UserId = @UserId\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_SpecLookupIntFilter",
    "ProcedureDefinition": "CREATE PROCEDURE Update_SpecLookupIntFilter\r\n    @SpecId INT,\r\n    @FilterId INT,\r\n    @NewFilterValue INT\r\nAS\r\nBEGIN\r\n    UPDATE Specs_Lookup_Single_Int_Filters\r\n    SET FilterValue = @NewFilterValue\r\n    WHERE SpecId = @SpecId\r\n    AND FilterId = @FilterId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_UserSession",
    "ProcedureDefinition": "CREATE PROCEDURE Get_UserSession\r\n    @UserId INT,\r\n    @Hash VARBINARY(64),\r\n    @Salt VARBINARY(16)\r\nAS\r\nBEGIN\r\n    SELECT * FROM UserSessions\r\n    WHERE UserId = @UserId\r\n    AND TokenHash = @Hash\r\n    AND TokenSalt = @Salt\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CartItems",
    "ProcedureDefinition": "CREATE PROCEDURE Get_CartItems\r\n    @UserId INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM CartItems\r\n    WHERE UserId = @UserId\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_SpecLookupStringFilter",
    "ProcedureDefinition": "CREATE PROCEDURE Update_SpecLookupStringFilter\r\n    @SpecId INT,\r\n    @FilterId INT,\r\n    @NewFilterValue NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    UPDATE Specs_Lookup_Single_String_Filters\r\n    SET FilterValue = @NewFilterValue\r\n    WHERE SpecId = @SpecId\r\n    AND FilterId = @FilterId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Create_UserAccount",
    "ProcedureDefinition": "CREATE PROCEDURE Create_UserAccount\r\n    @Username NVARCHAR(48),\r\n    @Email NVARCHAR(254),\r\n    @Hash VARBINARY(64),\r\n    @Salt VARBINARY(16)\r\nAS\r\nBEGIN\r\n    INSERT INTO UserAccounts (Username, Email, PasswordHash, PasswordSalt)\r\n    VALUES (@Username, @Email, @Hash, @Salt);\r\n    SELECT * FROM UserAccounts WHERE UserId = SCOPE_IDENTITY();\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_CartProducts",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_CartProducts]\r\n    @ProductIdList NVARCHAR(MAX),  -- Assuming a comma-separated list like '1,2,3,4'\r\n    @VariantSubIdList NVARCHAR(MAX)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Convert the comma-separated string into a table variable for comparison\r\n    DECLARE @ProductIdTable TABLE (ProductIdParam INT);\r\n    INSERT INTO @ProductIdTable\r\n    SELECT value\r\n    FROM STRING_SPLIT(@ProductIdList, ',');\r\n\r\n    DECLARE @VariantSubIdTable TABLE (VariantSubIdParam INT);\r\n    INSERT INTO @VariantSubIdTable\r\n    SELECT value\r\n    FROM STRING_SPLIT(@VariantSubIdList, ',');\r\n\r\n    -- Query to select items matching the IDs in the list\r\n    SELECT p.*, v.*\r\n    FROM Products p\r\n    LEFT JOIN ProductVariants v\r\n    ON p.ProductId = v.ProductId\r\n    WHERE p.ProductId IN (SELECT ProductIdParam FROM @ProductIdTable)\r\n    AND v.VariantSubId IN (SELECT VariantSubIdParam FROM @VariantSubIdTable)\r\nEND\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_CategoryTertiary",
    "ProcedureDefinition": "CREATE PROCEDURE Add_CategoryTertiary\r\n    @PrimaryCategoryId INT,\r\n    @SecondaryCategoryId INT,\r\n    @CategoryName NVARCHAR(64),\r\n    @ApiUrl NVARCHAR(64),\r\n    @ImageUrl NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    INSERT INTO Categories_Tertiary (PrimaryCategoryId, SecondaryCategoryId, CategoryName, CategoryApiUrl, CategoryImageUrl)\r\n    VALUES (@PrimaryCategoryId, @SecondaryCategoryId, @CategoryName, @ApiUrl, @ImageUrl);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_CategorySecondary",
    "ProcedureDefinition": "CREATE PROCEDURE Add_CategorySecondary\r\n    @PrimaryCategoryId INT,\r\n    @CategoryName NVARCHAR(64),\r\n    @ApiUrl NVARCHAR(64),\r\n    @ImageUrl NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    INSERT INTO Categories_Secondary (PrimaryCategoryId, CategoryName, CategoryApiUrl, CategoryImageUrl)\r\n    VALUES (@PrimaryCategoryId, @CategoryName, @ApiUrl, @ImageUrl);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_CategoryPrimary",
    "ProcedureDefinition": "CREATE PROCEDURE Add_CategoryPrimary\r\n    @CategoryName NVARCHAR(64),\r\n    @ApiUrl NVARCHAR(64),\r\n    @ImageUrl NVARCHAR(64)\r\nAS\r\nBEGIN\r\n    INSERT INTO Categories_Primary (CategoryName, CategoryApiUrl, CategoryImageUrl)\r\n    VALUES (@CategoryName, @ApiUrl, @ImageUrl);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_CategoryPrimary",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_CategoryPrimary\r\n    @PrimaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Categories_Primary\r\n    WHERE PrimaryCategoryId = @PrimaryCategoryId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_CategorySecondary",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Remove_CategorySecondary]\r\n    @SecondaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Categories_Secondary\r\n    WHERE @SecondaryCategoryId = @SecondaryCategoryId;\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_CategoryTertiary",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_CategoryTertiary\r\n    @TertiaryCategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Categories_Tertiary\r\n    WHERE TertiaryCategoryId = @TertiaryCategoryId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_CategoryDescription",
    "ProcedureDefinition": "CREATE PROCEDURE Add_CategoryDescription\r\n    @CategoryTier INT,\r\n    @CategoryId INT,\r\n    @Description NVARCHAR(1000)\r\nAS\r\nBEGIN\r\n    INSERT INTO Category_Descriptions (CategoryLevel, CategoryId, CategoryDescription)\r\n    VALUES (@CategoryTier, @CategoryId, @Description);\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Update_CategoryDescription",
    "ProcedureDefinition": "CREATE PROCEDURE Update_CategoryDescription\r\n    @CategoryTier INT,\r\n    @CategoryId INT,\r\n    @NewDescription NVARCHAR(1000)\r\nAS\r\nBEGIN\r\n    UPDATE Category_Descriptions\r\n    SET CategoryDescription = @NewDescription\r\n    WHERE CategoryLevel = @CategoryTier\r\n    AND CategoryId = @CategoryId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Remove_CategoryDescription",
    "ProcedureDefinition": "CREATE PROCEDURE Remove_CategoryDescription\r\n    @CategoryTier INT,\r\n    @CategoryId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Category_Descriptions\r\n    WHERE CategoryLevel = @CategoryTier\r\n    AND CategoryId = @CategoryId;\r\nEND;"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_FeaturedProducts",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_FeaturedProducts]\r\nAS\r\nBEGIN\r\n    SELECT * FROM FeaturesProducts\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Get_FeaturedDeals",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Get_FeaturedDeals]\r\nAS\r\nBEGIN\r\n    SELECT p.*, v.*\r\n    FROM Products p\r\n    LEFT JOIN FeaturesTopDeals d\r\n    ON p.ProductId = d.ProductId\r\n    LEFT JOIN ProductVariants v\r\n    ON p.ProductId = v.ProductId\r\n    WHERE p.ProductId = d.ProductId\r\n    AND v.VariantSubId = d.VariantSubId\r\nEND;\r\n"
  },
  {
    "SchemaName": "dbo",
    "ProcedureName": "Add_CartItem",
    "ProcedureDefinition": "CREATE PROCEDURE [dbo].[Add_CartItem]\r\n    @ProductId INT,\r\n    @UserId INT,\r\n    @VariantSubId INT,\r\n    @Quantity INT\r\nAS\r\nBEGIN\r\n    IF NOT EXISTS (\r\n        SELECT 1\r\n        FROM CartItems\r\n        WHERE ProductId = @ProductId\r\n        AND UserId = @UserId\r\n        AND VariantSubId = @VariantSubId\r\n    )\r\n    BEGIN\r\n        INSERT INTO CartItems (ProductId, UserId, VariantSubId, Quantity)\r\n        VALUES (@ProductId, @UserId, @VariantSubId, @Quantity);\r\n    END\r\nEND;\r\n"
  }
]