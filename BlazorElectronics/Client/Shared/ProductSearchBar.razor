@using BlazorElectronics.Client.Services.Products
@using BlazorElectronics.Shared
@using BlazorElectronics.Shared.DtosOutbound.Products
@inject NavigationManager NavigationManager;
@inject IProductServiceClient ProductService;

<div class="input-group product-search-bar">
    <input class="form-control" 
           @bind-value="_searchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearch"
           placeholder="Search All Products..."
           @ref="_searchInputElement"/>
    <datalist id="products">
        @foreach ( string s in _suggestions )
        {
            <option>@s</option>
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>

@code {
    string _exceptionMessage = string.Empty;
    ElementReference _searchInputElement;
    string _searchText = string.Empty;
    List<string> _suggestions = new();

    protected override async Task OnAfterRenderAsync( bool firstRender )
    {
        //if ( firstRender )
            //await _searchInputElement.FocusAsync();
    }

    void SearchProducts()
    {
        ProductService.ClearSearchRequest();
        ProductService.UpdateSearchText( _searchText );
        string? url = ProductService.GetProductSearchUrl();
        NavigationManager.NavigateTo( string.IsNullOrEmpty( url ) ? "/" : url );
    }
    async Task HandleSearch( KeyboardEventArgs args )
    {
        if ( args.Key is null or "Enter" )
            SearchProducts();
        else if ( _searchText.Length < 1 )
            return;

        ApiReply<ProductSuggestionsResponse?>? suggestionResponse = await ProductService.GetProductSearchSuggestions( _searchText );
        
        if ( suggestionResponse?.Data == null || !suggestionResponse.Success )
        {
            _suggestions = new List<string>();
            return;
        }

        _suggestions = suggestionResponse.Data.Suggestions;
    }
}