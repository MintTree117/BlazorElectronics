@using BlazorElectronics.Client.Services.Categories
@using BlazorElectronics.Shared.DataTransferObjects.Categories
@inject ICategoryServiceClient CategoryServiceClient;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorElectronics</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            
            @if ( !_loadedCategories || _categories == null ) {
                <span>@_categoryMessage</span>
            }
            else {
                @foreach ( int i in _categories.PrimaryCategoryIds ) {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="@_categories.CategoriesById[ i ].Url">
                            @_categories.CategoriesById[ i ].Name
                        </NavLink>
                    </div>
                }
            }
            
        </div>
        <!--<div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>-->
    </nav>
</div>

@code {
    bool _loadedCategories = false;
    bool _collapseNavMenu = true;
    string? _categoryMessage;
    string? NavMenuCssClass => _collapseNavMenu
        ? "collapse"
        : null;

    Categories_DTO? _categories;
    
    protected override async Task OnInitializedAsync()
    {
        _categories = await CategoryServiceClient.GetCategories();
        _loadedCategories = true;

        if ( _categories == null )
            _categoryMessage = "Failed to load categories!";
    }

    void ToggleNavMenu() { _collapseNavMenu = !_collapseNavMenu; }
}