@using BlazorElectronics.Client.Services.Cart
@using Blazored.LocalStorage
@using BlazorElectronics.Shared.DtosInbound.Products
@using BlazorElectronics.Shared.Mutual
@inject ICartService CartService
@inject ISyncLocalStorageService LocalStorage
@implements IDisposable

<span>@message</span>
<a href="cart" class="btn btn-info">
    <span class="badge"><i class="oi oi-cart"></i>@_cartCount</span>
</a>

@code 
{
    string message = string.Empty;
    int _cartCount = 0;
    
    async Task<int> GetCartItemsCount()
    {
        Cart_DTO? cart = await CartService.GetItemsFromLocalStorage();
        return cart?.Items.Count ?? 0;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _cartCount = await GetCartItemsCount();
            StateHasChanged();
        }
        catch ( Exception e )
        {
            message = e.Message;
        }
    }

    protected override void OnInitialized()
    {
        CartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
    }
}