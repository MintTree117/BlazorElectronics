@using BlazorElectronics.Shared
@using BlazorElectronics.Shared.SpecLookups
@inherits RazorView

<div class="filter-container">
    <div class="mb-3">
        <button class="btn btn-primary" type="button" @onclick="ApplyFilters">Apply Filters</button>
    </div>

    <div class="mb-3">
        <input type="checkbox" class="form-check-input" id="inStockCheckbox" @bind="@InStock">
        <label for="inStockCheckbox" class="form-check-label">In Stock</label>
    </div>

    <div class="mb-3">
        <input type="checkbox" class="form-check-input" id="mustHaveSaleCheckbox" @bind="@MustHaveSale">
        <label for="mustHaveSaleCheckbox" class="form-check-label">On Sale</label>
    </div>

    <div class="mb-3">
        <label for="minPrice" class="form-label">Minimum Price</label>
        <input type="number" class="form-control" id="minPrice" @bind="@MinPrice">
    </div>

    <div class="mb-3">
        <label for="maxPrice" class="form-label">Maximum Price</label>
        <input type="number" class="form-control" id="maxPrice" @bind="@MaxPrice">
    </div>

    <div class="mb-3">
        <label class="form-label">Minimum Rating:</label>
        <div class="d-flex flex-column">
            @for (int i = 5; i >= 1; i--)
            {
                int localIndex = i;
                <button type="button" class="btn btn-outline-primary mb-2" @onclick="() => SetMinimumRating(localIndex)">
                    @for (int j = 1; j <= 5; j++)
                    {
                        if (j <= localIndex)
                        {
                            <span class="oi oi-star" style="color: gold;" aria-hidden="true"></span>
                        }
                        else
                        {
                            <span class="oi oi-star" style="color: lightgray;" aria-hidden="true"></span>
                        }
                    }
                    & up
                </button>
            }
        </div>
    </div>

</div>
