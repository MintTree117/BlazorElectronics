@using BlazorElectronics.Shared.Outbound.Specs
@inherits RazorView

<div class="filter-container">
    <div class="mb-3">
        <button class="btn btn-primary" type="button" @onclick="ApplyFilters">Apply Filters</button>
    </div>

    <div class="mb-3">
        <input type="checkbox" class="form-check-input" id="inStockCheckbox" @bind="@InStock">
        <label for="inStockCheckbox" class="form-check-label">In Stock</label>
    </div>

    <div class="mb-3">
        <input type="checkbox" class="form-check-input" id="mustHaveSaleCheckbox" @bind="@MustHaveSale">
        <label for="mustHaveSaleCheckbox" class="form-check-label">On Sale</label>
    </div>

    <div class="mb-3">
        <label for="minPrice" class="form-label">Minimum Price</label>
        <input type="number" class="form-control" id="minPrice" @bind="@MinPrice">
    </div>

    <div class="mb-3">
        <label for="maxPrice" class="form-label">Maximum Price</label>
        <input type="number" class="form-control" id="maxPrice" @bind="@MaxPrice">
    </div>

    <div class="mb-3">
        <label class="form-label">Minimum Rating:</label>
        <div class="d-flex flex-column">
            @for (int i = 5; i >= 1; i--)
            {
                int localIndex = i;
                <button type="button" class="btn btn-outline-primary mb-2" @onclick="() => SetMinimumRating(localIndex)">
                    @for (int j = 1; j <= 5; j++)
                    {
                        if (j <= localIndex)
                        {
                            <span class="oi oi-star" style="color: gold;" aria-hidden="true"></span>
                        }
                        else
                        {
                            <span class="oi oi-star" style="color: lightgray;" aria-hidden="true"></span>
                        }
                    }
                    & up
                </button>
            }
        </div>
    </div>
    
    @foreach ( SpecFilterTableResponse filter in _specFilters.IntFilters )
    {
        <div class="mb-3">
            <span>@filter.Name</span>
        </div>

        for ( int i = 0; i < filter.Values.Count; i++ )
        {
            string value = filter.Values[ i ];
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="@($"int-filter-{filter.Id}-{i}")"
                       checked="@selectedIntFilters[ ( filter.Id, value ) ]"
                       @onchange="() => OnIntFilterChanged( filter.Id, value, !selectedIntFilters[ ( filter.Id, value ) ] )">
                <label class="form-check-label" for="@($"int-filter-{filter.Id}-{i}")">@value</label>
            </div>
        }
    }
    
    @foreach ( SpecFilterTableResponse filter in _specFilters.StringFilters )
    {
        <div class="mb-3">
            <span>@filter.Name</span>
        </div>

        for ( int i = 0; i < filter.Values.Count; i++ )
        {
            string value = filter.Values[ i ];
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="@($"string-filter-{filter.Id}-{i}")"
                       checked="@selectedStringFilters[ ( filter.Id, value ) ]"
                       @onchange="() => OnStringFilterChanged( filter.Id, value, !selectedStringFilters[ ( filter.Id, value ) ] )">
                <label class="form-check-label" for="@($"string-filter-{filter.Id}-{i}")">@value</label>
            </div>
        }
    }
    
    @for ( int i = 0; i < _specFilters.BoolFilters.Count; i++ )
    {
        int localIndex = i;
        <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="@($"bool-filter-{localIndex}")"
                   checked="@selectedBoolFilters[ localIndex ]"
                   @onchange="() => OnBoolFilterChanged( localIndex, !selectedBoolFilters[ localIndex ] )">
            <label class="form-check-label" for="@($"bool-filter--{localIndex}")">@_specFilters.BoolFilters[ localIndex ]</label>
        </div>
    }
            
    @foreach ( SpecFilterTableResponse filter in _specFilters.MultiFilters )
    {
        <div class="mb-3">
            <span>@filter.Name</span>
        </div>

        for ( int i = 0; i < filter.Values.Count; i++ )
        {
            string value = filter.Values[ i ];
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="@($"multi-filter-{filter.Id}-{i}")"
                       checked="@selectedMultiFilters[ ( filter.Id, value ) ]"
                       @onchange="() => OnMultiFilterChanged( filter.Id, value, !selectedMultiFilters[ ( filter.Id, value ) ] )">
                <label class="form-check-label" for="@($"multi-filter-{filter.Id}-{i}")">@value</label>
            </div>
        }
    }
    
</div>
