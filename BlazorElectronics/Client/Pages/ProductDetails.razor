@page "/product/{id:int}"
@using BlazorElectronics.Client.Services.Products
@using BlazorElectronics.Shared
@using BlazorElectronics.Shared.DataTransferObjects.Products
@inject IProductServiceClient ProductServiceClient;

@if ( !_loaded || _productDetails == null )
{
    <span>@_message</span>
}
else {
    <span>Loaded Product</span>
    <div class="product-details">
        <div class="pd-img-wrapper mr-2">
            @if ( _productDetails.ProductImages.Count <= 0 )
            {
                <span>No Images Found!</span>
            }
            else
            {
                <img class="pd-img" src="@_productDetails.ProductImages[ 0 ]" alt="@_productDetails.ProductName"/>   
            }
        </div>
        <div class="media-body">
            <h2 class="mb-0">@_productDetails.ProductName</h2>
            <p>@_productDetails.ProductDescription</p>
            <h4 class="price">
                $100.00
            </h4>
        </div>
    </div>
}

@code {
    ProductDetails_DTO? _productDetails = null;
    string? _message;
    bool _loaded = false;
    
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _message = "Loading Product Details...";

        ServiceResponse<ProductDetails_DTO?> response = await ProductServiceClient.GetProductDetails( Id );
        _loaded = true;

        if ( response.Data == null || !response.Success )
            _message = response.Message;
        else
            _productDetails = response.Data;
    }
}