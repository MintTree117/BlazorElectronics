@typeparam TItem where TItem : BlazorElectronics.Shared.CrudView
@typeparam TEdit where TEdit : BlazorElectronics.Shared.ICrudEdit, new()

<div class="form-header">
    <h3>@Page.PageTitle</h3>
    <button type="button" onclick="@Page.CreateItem" class="btn btn-primary btn-lg btn-icon">
        <i class="oi oi-plus"></i>Create New
    </button>
</div>

<ActionMessage Page="@Page"></ActionMessage>

<table class="table table-hover crud-table">
    <thead class="thead-light">
    <tr>
        @foreach ( KeyValuePair<string, Action> meta in Page.GetTHeadMeta() )
        {
            <th class="crud-sort-th" @onclick="meta.Value">@meta.Key</th>
        }
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach ( TItem item in Page.GetView() )
    {
        <tr class="crud-tr">
            @foreach ( string property in Page.GetColumnProperties() )
            {
                <td class="align-middle">
                    @Page.RenderPropertyColumn( item, property )
                </td>
            }
            <td class="text-nowrap">
                <button class="btn btn-primary" @onclick="async () => await Page.EditItem( item.Id )">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="btn btn-primary" @onclick="async () => await Page.RemoveItem( item.Id )">
                    <i class="oi oi-trash"></i>
                </button>
            </td>
        </tr>
    }
    </tbody>
</table>

@code 
{
    [Parameter] public CrudPage<TItem,TEdit> Page { get; set; } = null!;
}
