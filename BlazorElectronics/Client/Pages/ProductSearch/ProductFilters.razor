@using BlazorElectronics.Shared
@using BlazorElectronics.Shared.Specs
@inherits RazorView

<div class="filter-container">
    <div class="mb-3 d-grid">
        <button class="btn btn-primary" type="button" @onclick="ApplyFilters">Apply Filters</button>
    </div>

    <div class="mb-3">
        <input type="checkbox" class="form-check-input" id="inStockCheckbox" @bind="@InStock">
        <label for="inStockCheckbox" class="form-check-label">In Stock</label>
    </div>

    <div class="mb-3">
        <input type="checkbox" class="form-check-input" id="mustHaveSaleCheckbox" @bind="@OnSale">
        <label for="mustHaveSaleCheckbox" class="form-check-label">On Sale</label>
    </div>

    <div class="mb-3">
    <label class="form-label">Price Range</label>
        <div class="d-flex justify-content-between">
            <div class="me-1">
                <small class="text-muted">Min</small>
                <input type="number" class="form-control" id="minPrice" aria-label="Minimum price" @bind="@MinPrice">
            </div>
            <div class="ms-1">
                <small class="text-muted">Max</small>
                <input type="number" class="form-control" id="maxPrice" aria-label="Maximum price" @bind="@MaxPrice">
            </div>
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label">Minimum Rating:</label>
        <div class="d-flex flex-column">
            @for ( int i = 5; i >= 1; i-- )
            {
                int localIndex = i;
                <button type="button" class="btn mb-2 ps-0 d-flex justify-content-start align-items-center" @onclick="() => SetMinimumRating( localIndex )">
                    @for ( int j = 1; j <= 5; j++ )
                    {
                        if ( j <= localIndex )
                        {
                            <span class="oi oi-star" style="color: gold;" aria-hidden="true"></span>
                        }
                        else
                        {
                            <span class="oi oi-star" style="color: lightgray;" aria-hidden="true"></span>
                        }
                    }
                    & up
                </button>
            }
        </div>
    </div>
    
    <div class="mb-3">
        @foreach ( Spec s in _specs.Values )
        {
            <div class="mb-3 d-grid">
                <!-- Toggle Button with Icon -->
                <button class="btn ps-0 d-flex align-items-center justify-content-between" type="button"
                        @onclick="() => ToggleCollapse( s.SpecId )">
                    <span>@s.SpecName</span>
                    <i class="oi @(_collapsedSpecs[ s.SpecId ] ? "oi-plus" : "oi-minus") "></i>
                </button>

                <!-- Collapsible Content -->
                <div class="@( _collapsedSpecs[ s.SpecId ] ? "collapse" : "collapse show")" id="collapse-@s.SpecId">
                    @for ( int i = 0; i < s.Values.Count; i++ )
                    {
                        string id = s.SpecName + i;
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input"
                                   @bind="@_selectedSpecs[ ( s.SpecId, i ) ]" id="@id"/>
                            <label class="form-check-label" for="@id">@s.Values[ i ]</label>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

</div>
